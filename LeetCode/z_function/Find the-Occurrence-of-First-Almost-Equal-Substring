// https://leetcode.com/problems/find-the-occurrence-of-first-almost-equal-substring/

class Solution {
public:
    int minStartingIndex(string s, string pattern) {
        string s2 (s.rbegin(), s.rend());
        string p2 (pattern.rbegin(), pattern.rend());
        vector<int> z1 = z_function(pattern + s);
        vector<int> z2 = z_function(p2 + s2);
        int n = s.length();
        int m = pattern.length();
        for (int i = 0; i <= n-m; i ++) {
            if (z1[m+i] + 1 + z2[(n+m) - i - m] >= m)
                return i;
        }
        return -1;
    }

    vector<int> z_function(string s) {
        int n = s.size(), l = 0, r = 0;
        vector<int> z(n, 0);
        for (int i = 1; i < n; i ++) {
            if (i < r) {
                z[i] = min(r-i, z[i - l]);
            }
            while (i + z[i] < n && s[z[i]] == s[i+z[i]]) {
                z[i] ++;
            }
            if (i + z[i] > r) {
                r = i + z[i];
                l = i;
            }
        }
        return z;
    }

};
